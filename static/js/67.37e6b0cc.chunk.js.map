{"version":3,"file":"static/js/67.37e6b0cc.chunk.js","mappings":"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","sources":["components/Common/Button/Button.styled.js","components/Common/Button/Button.js","components/Common/Container/Container.js","components/Form/RegistrationForm/RegistrationForm.styled.js","components/Form/RegistrationForm/StepOne/StepOne.jsx","components/Form/RegistrationForm/StepTwo/StepTwo.jsx","components/Form/RegistrationForm/RegistrationForm.jsx","page/registrationPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  padding: ${p => `${p.theme.space[3]}px`};\n  min-width: ${p => `${p.theme.space[7]}px`};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-family: ${p => p.theme.fonts.main};\n  border-radius: ${p => p.theme.radii.xl};\n  border: ${p => p.theme.borders.none};\n  color: ${p => p.theme.colors.button.secondaryText};\n  background: ${p => p.theme.colors.button.primaryBackground};\n  line-height: ${x => x.theme.lineHeights.body};\n  font-weight: ${x => x.theme.fontWeights.bold};\n  width: 182px;\n  height: 43px;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n`;\n","import { StyledButton } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport default function Button({\n  type = 'button',\n  id,\n  disabled = false,\n  onClick,\n  children,\n  style,\n}) {\n  return (\n    <StyledButton\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n      id={id}\n      style={style}\n    >\n      {children}\n    </StyledButton>\n  );\n}\n\nButton.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  style: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { device } from 'utils/device';\n\nconst Container = styled.div`\n  // width: 100%;\n  padding-right: 20px;\n  padding-left: 20px;\n  // margin: 0 auto;\n\n  @media (${device.tabletOnly}) {\n    padding-right: 32px;\n    padding-left: 32px;\n  }\n\n  @media (${device.desktop}) {\n    padding-right: 16px;\n    padding-left: 16px;\n  }\n`;\n\nexport default Container;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n`;\nexport const Wrapper = styled.div`\n  width: 618px;\n  padding: 60px 80px;\n  background: #ffffff;\n  box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  border-radius: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Manrope';\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 1.36;\n\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  color: #111111;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.33;\n\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: rgba(17, 17, 17, 0.6);\n`;\n\nexport const LoginLink = styled(Link)`\n  /* color: ${p => p.theme.colors.accentAlpha}; */\n  color: #3091eb;\n  text-decoration: underline;\n`;\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport TextField from '@mui/material/TextField';\nimport Button from 'components/Common/Button/Button';\nimport { Form } from '../RegistrationForm.styled';\n\nconst StepOne = ({ next, data }) => {\n  const stepOneValidationSchema = yup.object().shape({\n    email: yup.string().email().required().min(10).max(63).label('Email'),\n    password: yup.string().min(7).max(32).required().label('Password'),\n    confirmPassword: yup\n      .string()\n      .min(7)\n      .max(32)\n      .required()\n      .test('checkEqualityPasswords', 'Passwords must match', function (value) {\n        if (this?.options?.parent?.password !== value) {\n          return false;\n        }\n        return true;\n      })\n      .label('Confirm password'),\n  });\n\n  const formik = useFormik({\n    initialValues: data,\n    validationSchema: stepOneValidationSchema,\n\n    onSubmit: event => {\n      const email = event.email;\n      const password = event.password;\n      const confirmPassword = event.confirmPassword;\n\n      next({ email, password, confirmPassword });\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <TextField\n        type=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n        variant=\"outlined\"\n      />\n      <TextField\n        type=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n        variant=\"outlined\"\n      />\n      <TextField\n        type=\"password\"\n        name=\"confirmPassword\"\n        label=\"Confirm Password\"\n        value={formik.values.confirmPassword}\n        onChange={formik.handleChange}\n        error={\n          formik.touched.confirmPassword &&\n          Boolean(formik.errors.confirmPassword)\n        }\n        helperText={\n          formik.touched.confirmPassword && formik.errors.confirmPassword\n        }\n        variant=\"outlined\"\n      />\n      <Button type=\"submit\">Next</Button>\n    </Form>\n  );\n};\n\nexport default StepOne;\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport TextField from '@mui/material/TextField';\nimport Button from 'components/Common/Button/Button';\nimport { Form } from '../RegistrationForm.styled';\n\nconst StepTwo = ({ next, data, prev }) => {\n  const cityRegex = /^(\\w+(,)\\s*)+\\w+$/;\n  const phoneRegex = /^\\+380\\d{3}\\d{2}\\d{2}\\d{2}$/;\n\n  const stepTwoValidationSchema = yup.object().shape({\n    username: yup.string().required(),\n    city: yup\n      .string()\n      .required()\n      .matches(cityRegex, 'Error. Example: Brovary, Kyiv'),\n    phone: yup\n      .string()\n      .required()\n      .max(13)\n      .matches(phoneRegex, 'Phone number is not valid'),\n  });\n  const formik = useFormik({\n    initialValues: data,\n\n    validationSchema: stepTwoValidationSchema,\n\n    onSubmit: event => {\n      const username = event.username;\n      const city = event.city;\n      const phone = event.phone;\n\n      next({ username, city, phone }, true);\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <TextField\n        type=\"text\"\n        name=\"username\"\n        label=\"Name\"\n        value={formik.values.username}\n        onChange={formik.handleChange}\n        error={formik.touched.username && Boolean(formik.errors.username)}\n        helperText={formik.touched.username && formik.errors.username}\n        variant=\"outlined\"\n      />\n      <TextField\n        type=\"text\"\n        name=\"city\"\n        label=\"City, region\"\n        value={formik.values.city}\n        onChange={formik.handleChange}\n        error={formik.touched.city && Boolean(formik.errors.city)}\n        helperText={formik.touched.city && formik.errors.city}\n        variant=\"outlined\"\n      />\n      <TextField\n        type=\"phone\"\n        name=\"phone\"\n        label=\"Mobile phone\"\n        value={formik.values.phone}\n        onChange={formik.handleChange}\n        error={formik.touched.phone && Boolean(formik.errors.phone)}\n        helperText={formik.touched.phone && formik.errors.phone}\n        variant=\"outlined\"\n      />\n      <Button type=\"button\" onClick={() => prev(formik.values)}>\n        Back\n      </Button>\n      <Button type=\"submit\">Register</Button>\n    </Form>\n  );\n};\n\nexport default StepTwo;\n","import { useState } from 'react';\nimport { Text, LoginLink, Title, Wrapper } from './RegistrationForm.styled';\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nconst RegistrationForm = () => {\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    username: '',\n    city: '',\n    phone: '',\n  });\n\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      console.log(data);\n      // dispatch(register({ data })).then(({ error }) => {\n      //   !error && navigate('/login'); // if no error (success) redirect ot login page\n      // });\n      return;\n    }\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <StepOne next={handleNextStep} data={data} />,\n    <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\n  ];\n\n  return (\n    <Wrapper>\n      <Title>Registration</Title>\n      {steps[currentStep]}\n      <Text>\n        Already have an account?\n        <LoginLink to=\"/login\">Login</LoginLink>\n      </Text>\n    </Wrapper>\n  );\n};\n\nexport default RegistrationForm;\n","import Container from '../../components/Common/Container/Container';\nimport RegistrationForm from 'components/Form/RegistrationForm';\n\nfunction RegisterPage() {\n  return (\n    <>\n      <Container>\n        <RegistrationForm />\n      </Container>\n    </>\n  );\n}\n\nexport default RegisterPage;\n"],"names":["StyledButton","styled","p","theme","space","fontSizes","m","fonts","main","radii","xl","borders","none","colors","button","secondaryText","primaryBackground","x","lineHeights","body","fontWeights","bold","Button","type","id","disabled","onClick","children","style","Container","device","Form","Wrapper","Title","Text","LoginLink","Link","accentAlpha","next","data","stepOneValidationSchema","yup","shape","email","required","min","max","label","password","confirmPassword","test","value","this","options","parent","formik","useFormik","initialValues","validationSchema","onSubmit","event","handleSubmit","TextField","name","values","onChange","handleChange","error","touched","Boolean","errors","helperText","variant","prev","stepTwoValidationSchema","username","city","matches","phone","useState","setData","currentStep","setCurrentStep","handleNextStep","newData","final","console","log","steps","to"],"sourceRoot":""}