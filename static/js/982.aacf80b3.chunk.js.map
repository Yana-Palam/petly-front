{"version":3,"file":"static/js/982.aacf80b3.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","/**\n * Specifically match against false here as incomplete versions of\n * PointerEvents in very old browser might have it set as undefined.\n */\nconst isPrimaryPointer = (event) => event.isPrimary !== false;\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction isMouseEvent(event) {\n    return event.type !== \"pen\" && event.type !== \"touch\";\n}\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a, _b;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        (_b = (_a = visualElement.getProps()).onTapStart) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.3.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate({ ...options, autoplay: false });\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        const animation = animate(options);\n        return () => animation.stop();\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.3.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.3.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","animationState","animateChanges","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","isMouseEvent","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","startPress","window","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","Promise","resolve","stopAnimation","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","appearStoreId","currentTime","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","arguments","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}